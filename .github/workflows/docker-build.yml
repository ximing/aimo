name: Build and Push Docker Image

on:
  push:
    branches: ["main", "master"]
    paths:
        - "docker/postgres/**"
        - ".github/workflows/**"
  pull_request:
    branches: ["main", "master"]
    paths:
      - "docker/postgres/**"
      - ".github/workflows/**"
  schedule:
    - cron: "0 0 * * 6"  # 每周六运行
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}/postgres

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write
    strategy:
      fail-fast: false
      matrix:
        pg_version: [17]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Determine if push is needed
        run: |
          echo "GITHUB_EVENT_NAME = ${GITHUB_EVENT_NAME}"
          PUSH=true
          if [ "${GITHUB_EVENT_NAME}" = "schedule" ]; then
            UPSTREAM_VER="$(docker run --rm --pull always pgvector/pgvector:pg${{ matrix.pg_version }} pg_config --version)"
            DOWNSTREAM_VER="$(docker run --rm --pull always ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ matrix.pg_version }} pg_config --version || true)"
            echo "upstream version: ${UPSTREAM_VER}"
            echo "downstream version: ${DOWNSTREAM_VER}"
            if [ "${UPSTREAM_VER}" = "${DOWNSTREAM_VER}" ]; then
              PUSH=false
            fi
          fi
          echo "PUSH=${PUSH}" >> $GITHUB_ENV

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Determine supported platforms
        run: |
          PLATFORMS="$(docker buildx imagetools inspect pgvector/pgvector:pg${{ matrix.pg_version }} --raw | jq -r '[.manifests[].platform | select(.os != "unknown") | [.os, .architecture, .variant] | map(select(. != null)) | join("/")] | join(",")')"
          echo "PLATFORMS=${PLATFORMS}" >> $GITHUB_ENV

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./docker/postgres/Dockerfile
          push: ${{ env.PUSH }}
          platforms: ${{ env.PLATFORMS }}
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ matrix.pg_version }}
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            USE_CHINA_MIRROR=1
            PG_VERSION=${{ matrix.pg_version }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Extract metadata for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=latest,enable={{is_default_branch}}
            type=sha,prefix={{date 'YYYYMMDD'}}-

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./docker/postgres/Dockerfile
          push: true
          platforms: linux/amd64,linux/arm64
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            USE_CHINA_MIRROR=1
